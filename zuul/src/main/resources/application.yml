spring:
  application:
    name: zuul
  cloud:
 #####服务发现consul配置#### 
    consul:
      discovery:
        hostname: localhost
        port: 8500
      
server:
  port: 2100
  
#打开所有监控端点  
management:
  endpoints:
    web:
      exposure:
        include:
        - '*'
  endpoint:
    health:
      show-details: always    
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:2000/eureka/

zuul:
  routes:
    oauthserver:
      sensitiveHeaders: null
      path: /uaa/**
      stripPrefix: false
      serviceId: oauthserver
    api-a: # 该配置方式中，user-route只是给路由一个名称，可以任意起名。
      path: /api-a/**
      serviceId: service-hello
      retryable: true
    api-b:
      path: /api-b/**
      serviceId: service-feign
    service-ribbon: /api-c/** #service-ribbon微服务会被映射到/api-c/**路径
  add-proxy-headers: true
  ignored-services: config-server #配置需要忽略的服务，多个用逗号分隔
  ignored-patterns: /**/hello/**
  prefix: /
  thread-pool:
    use-separate-thread-pools: true
  host:
    connect-timeout-millis: 2000 #如果您通过指定URL配置了Zuul路由,则需这里配置
    socket-timeout-millis: 10000
    max-total-connections: 200
    max-per-route-connections: 20
  retryable: false
 
 # 限流
  ratelimit:
    key-prefix: api-a  #对应用来标识请求的key的前缀
    enabled: true
    repository: REDIS  #对应存储类型（用来存储统计信息）
    behind-proxy: true  #代理之后
    
    default-policy: #可选 - 针对所有的路由配置的策略，除非特别配置了policies
      limit: 10 #可选 - 每个刷新时间窗口对应的请求数量限制
      quota: 1000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
      refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
#      type: #可选 限流方式
#        - user
#        - origin
#        - url
    policies:
      service-hello:  #特定的路由
        limit: 10 #可选- 每个刷新时间窗口对应的请求数量限制
        quota: 1000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
        refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
        type: #可选 限流方式
          - type: user #基于用户的限流，某用户每分钟只能访问10次
            matcher: user
          - type: origin #基于访问源的限流，某个ip每分钟只能访问10次
            matcher: localhost
          - type: url #基于url的限流，某个url每分钟只能访问10次
            matcher: /hello
            
hystrix:
  command:
    default:
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 15000
ribbon:
  ReadTimeout: 1000 #如果Zuul使用服务发现，则需要使用ribbon.ReadTimeout和ribbon.SocketTimeout功能区属性配置这些超时
  ConnectTimeout: 1000
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2
  eureka:
    enabled: true