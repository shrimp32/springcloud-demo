spring:
  application:
    name: zuul
server:
  port: 2100

#管理端点不需要授权就能访问
management:
  security:
    enabled: false

# 配置eureka server地址
eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:2000/eureka/

################ 网关路由配置 ###############
zuul:
  routes:
    oauthserver:
#    默认敏感的头信息无法经网关进行传递，如下设置之后，就可以了
      sensitiveHeaders:
      path: /uaa/**
      stripPrefix: false
      serviceId: oauthserver
#   当访问地址符合/api-b/**时，被自动定位到service-feign服务上去
    api-a:
      path: /api-a/**
      serviceId: service-hello
#      开启该路由的重试
      retryable: true
    api-b:
      path: /api-b/**
      serviceId: service-feign
#   简化的写法，与上面作用一样
    service-ribbon: /api-c/**
# 不暴露被代理的服务地址
  add-proxy-headers: true
# 忽略service-hello服务，不为其提供路由
  ignored-services: config-server
# 不给接口/hello路由
  ignored-patterns: /**/hello/**
# 为路由增加统一的前缀
  prefix: /
# 配置Zuul的Hystrix线程池,让每个路由使用独立的线程池
  thread-pool:
    use-separate-thread-pools: true
# zuul超时配置，针对url方式有效
  host:
    connect-timeout-millis: 2000
    socket-timeout-millis: 10000
    max-total-connections: 200
    max-per-route-connections: 20
  retryable: false
# zuul的超时配置，针对Ribbon、Hystrix相关
hystrix:
  command:
    default:
      execution:
        timeout:
          enable: true
        isolation:
          thread:
            timeoutInMilliseconds: 15000

ribbon:
  ReadTimeout: 1000
  ConnectTimeout: 1000
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2
  eureka:
    enabled: true